#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Jackrabit AI
# 2024 Copyright Â© Robert APM Darin
# All rights reserved unconditionally.

import sys
sys.path.append('/home/JackrabbitAI/Library')
import os
import select
import copy
import json

import DecoratorFunctions as DF
import CoreFunctions as CF
import FileFunctions as FF
import AIFunctions as AI

@DF.function_trapper(False)
def CheckArgs(arg,inlist):
    arg=arg.lower()

    for item in inlist:
        if arg==item.lower():
            return True
    return False

@DF.function_trapper
def main():
    args=sys.argv.copy()

    ResetMemory=False
    SaveMemory=True
    NoMemory=False

    if CheckArgs('-isolation',args):
        NoMemory=True
        args.remove('-isolation')
    if CheckArgs('-reset',args):
        ResetMemory=True
        args.remove('-reset')
    if CheckArgs('-nomemory',args):
        SaveMemory=False
        args.remove('-nomemory')

    if len(args)>5:
        engine=args[1]
        model=args[2]
        mt=int(args[3])
        persona=args[4]
        role=args[5]
    else:
        print("A provider, model, Maximum number of tokens for Engine, persona and intructions must be supplied.")
        sys.exit(0)

    # The role is the instruction, analyze, evaluate... so.
    # The input is the data we what the instructions applied to.

    if role[0]=='@':
        if os.path.exists(role[1:]):
            role=FF.ReadFile(role[1:].strip()).replace('\n','\\n').replace('"',"'")
        else:
            print("Role file not found")
            sys.exit(0)

    input=''
    if CF.IsSTDIN():
        input=sys.stdin.read().replace('\n','\\n').replace('"',"'")

    agent=AI.Agent(engine=engine,model=model,maxtokens=mt,persona=persona,reset=ResetMemory,save=SaveMemory,isolation=NoMemory)

    # Get the response from the AI

    response=agent.Response(role+'\n\n'+input)
    print(response)

if __name__=='__main__':
    main()

